@use '../abstracts' as *;
@use '../abstracts/colors' as *;

@mixin avatar-sm($c, $bgc, $clsName) {
  .avatar-sm-i-#{$clsName} {
    position: relative;
    background-color: $bgc;
    box-sizing: border-box;
    color: $c;
    padding: var(--p-2);
    border-radius: 50%;
    i {
      font-size: var(--fsz-2);
      vertical-align: middle;
    }
  }
}
@mixin avatar-lg($c, $bgc, $clsName) {
  .avatar-lg-i-#{$clsName} {
    position: relative;
    background-color: $bgc;
    color: $c;
    box-sizing: border-box;
    padding: var(--p-4);
    border-radius: 50%;
    i {
      font-size: var(--fsz-3);
      vertical-align: middle;
    }
  }
}

@include avatar-sm(#fff, var(--icon-base-200), "basic");
@include avatar-sm(var(--icon-primary-100), var(--icon-primary-200), "primary");
@include avatar-sm(
  var(--icon-secondary-100),
  var(--icon-secondary-200),
  "secondary"
);

/* large icon avatar */

@include avatar-lg(#fff, var(--icon-base-200), "basic");
@include avatar-lg(var(--icon-primary-100), var(--icon-primary-200), "primary");
@include avatar-lg(
  var(--icon-secondary-100),
  var(--icon-secondary-200),
  "secondary"
);

/* small avatar image */
.avatar-sm {
  position: relative;
  display: inline-block;
  height: 40px;
  width: 40px;
  img {
    height: 100%;
    width: 100%;
    border-radius: 50%;
    object-position: top center;
    object-fit: cover;
  }
}
/* large avatar image */

.avatar-lg {
  position: relative;
  display: inline-block;
  height: 60px;
  width: 60px;
  img {
    height: 100%;
    width: 100%;
    border-radius: 50%;
    object-position: top center;
    object-fit: cover;
  }
}

// - Alert

@mixin alert($c) {
  .alert-#{$c} {
    position: relative;
    display: flex;
    align-items: flex-start;
    padding: var(--p-4) var(--p-2);
    border-radius: var(--br-1);
    max-width: 70vw;
    color: var(--c-#{$c}-300);
    background-color: var(--c-#{$c}-100);
    & > .alert-content {
      margin: 0 var(--p-2);
    }
    i {
      font-size: var(--fsz-2);
    }
  }
}

@include alert("primary");
@include alert("success");
@include alert("danger");
@include alert("base");

.alert-secondary {
  display: flex;
  align-items: flex-start;
  padding: var(--p-4) var(--p-2);
  border-radius: var(--br-1);
  max-width: 70vw;
  color: #a47e1b;
  background-color: #fae588;
  & > .alert-content {
    margin: var(--p-1);
  }
  i {
    font-size: var(--fsz-2);
  }
}

// - Badge
@mixin badge($c) {
  .badge-#{$c} {
    height: 10px;
    width: 10px;
    border-radius: 50%;
    position: absolute;
    bottom: 5%;
    right: 5%;
    background-color: var(--c-#{$c}-200);
    z-index: var(--z-1);
  }
  .badge-rect-#{$c} {
    background-color: var(--c-#{$c}-200);
    color: #fff;
    font-size: 0.8rem;
    padding: 0.25rem;
    font-weight: 600;
    border-radius: 0.25rem;
  }
}
@include badge("primary");
@include badge("success");
@include badge("danger");
@include badge("secondary");

// Button
.btn-disabled {
  cursor: not-allowed;
  border: 1px solid var(--c-base-300);
  font-weight: 600;
  box-sizing: border-box;
  background-color: #ccc;
  color: var(--c-base-300);
  border-radius: var(--br-1);
  padding: var(--p-3) var(--p-4);
}
/* buttons without borders */
@each $color-type, $shades in $colors {
  .outline-#{$color-type}{
    border: 2px solid var(--c-#{$color-type}-300);
  }
}
@each $color-type, $shades in $colors {
  .btn-c-#{$color-type} {
    border: 0;
    background-color: transparent;
    font-weight: 600;
    box-sizing: border-box;
    color: var(--c-#{$color-type}-300);
    border-radius: var(--br-1);
    padding: var(--p-3) var(--p-4);
    &:hover {
      box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
      background-color: var(--c-#{$color-type}-100);
    }
  }
}
/* main buttons */
@each $color-type, $shades in $colors {
  .btn-#{$color-type} {
    border: 0;
    font-weight: 500;
    color: var(--c-base-100);
    background-color: var(--c-#{$color-type}-200);
    border-radius: var(--br-1);
    padding: var(--p-3) var(--p-4);
    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
    &:hover,
    &:focus {
      background-color: var(--c-#{$color-type}-300);
    }
    &:focus {
      box-shadow: 0 0px 0px 0 rgba(0, 0, 0, 0.26);
    }
  }
}
/* outline buttons */
@each $color-type, $shades in $colors {
  .btn-outline-#{$color-type} {
    border: 1px solid var(--c-#{$color-type}-200);
    font-weight: 500;
    color: var(--c-#{$color-type}-200);
    background-color: transparent;
    border-radius: var(--br-1);
    padding: var(--p-5);
    line-height: 0;
    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
    &:hover,
    &:focus {
      color: var(--c-base-300);
      background-color: var(--c-#{$color-type}-100);
    }
  }
}
/* icon buttons */
@each $icon-color, $shades in $icon-colors {
  .icon-btn-#{$icon-color} {
    border: 0;
    font-weight: 500;
    color: var(--icon-#{$icon-color}-100);
    background-color: var(--icon-#{$icon-color}-200);
    border-radius: var(--br-1);
    padding: var(--p-2);
    font-size: var(--fsz-2);
    line-height: 0;
    box-shadow: 0 2px 7px 0 rgba(0, 0, 0, 0.26);
    &:hover,
    &:focus {
      background-color: var(--icon-#{$icon-color}-300);
    }
  }
}

.btn-addon{
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--p-2);
  & i{
    font-size: var(--fsz-2);
    line-height: 1;
    margin: 0 var(--p-1) 0 0;
  }
}

.btn-secondary {
  color: var(--c-base-300);
}
.btn-c-secondary {
  &:hover {
    color: var(--c-base-300);
  }
}
